services:
  postgres:
    container_name: postgres
    image: postgres:16.3-alpine
    restart: "no"
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:${POSTGRES_INNER_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pg_network
      - microservice_network
    env_file:
      - .env

  pgadmin:
    container_name: pg_admin
    image: dpage/pgadmin4:8.14.0
    restart: "no"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/misc/ping || exit -1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

    entrypoint: /bin/sh -c "chmod 600 /pgadmin4/pgpass; /entrypoint.sh;"
    networks:
      - pg_network
      - microservice_network
    env_file:
      - .env

  liquibase:
    container_name: liquibase
    image: liquibase/liquibase:4.31-alpine
    command: liquibase update --url=jdbc:postgresql://postgres:${POSTGRES_INNER_PORT}/${POSTGRES_DB} --username=${POSTGRES_USER} --password=${POSTGRES_PASSWORD} --changelog-file=/migrations/db.changeLog-master.yaml
    volumes:
      - ../liquibase/changelog/:/liquibase/migrations/
    networks:
      - pg_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  pgadmin_data:

networks:
  pg_network:
  microservice_network:
    external: true